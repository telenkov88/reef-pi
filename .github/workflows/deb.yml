name: deb
on: [push, pull_request]
jobs:
  builds:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.20'
      - uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
      - uses: actions/cache@v3.3.2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: Install
        run: yarn
      - name: go
        run: make go
      - name: pi
        run: make pi
      - name: pi-zero
        run: make pi-zero
      - name: bundler
        run: gem install bundler -v 2.4 --no-document
      - name: fpm
        run: bundle install
      - name: deb
        run: make pi_deb

      # Extract the branch name and set a dynamic tag for the build
      - name: Extract Branch Name and Set Tag
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(git rev-parse --short HEAD)
          RELEASE_VER=6.0
          echo "RELEASE_TAG=${RELEASE_VER}-${BRANCH_NAME}-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV
          echo "RELEASE_VER=${RELEASE_VER}-${BRANCH_NAME}-${DATE}" >> $GITHUB_ENV

      # Create a GitHub release with the artifacts
      - name: Create GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "${{ env.RELEASE_TAG }}"
          title: "Release ${{ env.RELEASE_VER }}"
          files: ./*.deb
        if: env.RELEASE_TAG != ''
